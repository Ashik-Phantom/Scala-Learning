[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Ashik\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Ashik\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Amazon.com Inc. Java 16.0.2)
[debug]       Load.loadUnit: plugins took 59.9272ms
[debug]       Load.loadUnit: defsScala took 0.1949ms
[debug] [Loading] Scanning directory C:\Users\Ashik\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Ashik\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 6.2982 ms
[debug]           Load.resolveProject(global-plugins) took 20.9811ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Ashik\.sbt\1.0\plugins, plugins: List(<none>))) took 37.6606ms
[debug] [Loading] Done in C:\Users\Ashik\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 49.939ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.0971ms
[debug]     Load.loadUnit(file:/C:/Users/Ashik/.sbt/1.0/plugins/, ...) took 115.2949ms
[debug]   Load.apply: load took 213.5193ms
[debug]   Load.apply: resolveProjects took 2.7702ms
[debug]   Load.apply: finalTransforms took 34.877ms
[debug]   Load.apply: config.delegates took 5.1259ms
[debug]   Load.apply: Def.make(settings)... took 259.0617ms
[debug]   Load.apply: structureIndex took 51.9375ms
[debug]   Load.apply: mkStreams took 2.5683ms
[info] loading global plugins from C:\Users\Ashik\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 1538.1098ms
[debug]           Load.loadUnit: plugins took 12.3466ms
[debug]           Load.loadUnit: defsScala took 0.0022ms
[debug] [Loading] Scanning directory C:\Users\Ashik\IdeaProjects\Scala-Learning\project
[debug]             Load.loadUnit: mkEval took 2.8218ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Ashik\IdeaProjects\Scala-Learning\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.8791 ms
[info] loading settings for project scala-learning-build from idea.sbt ...
[debug]               Load.resolveProject(scala-learning-build) took 1.2059ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scala-learning-build, base: C:\Users\Ashik\IdeaProjects\Scala-Learning\project, plugins: List(<none>))) took 2.3408ms
[debug] [Loading] Done in C:\Users\Ashik\IdeaProjects\Scala-Learning\project, returning: (scala-learning-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 72.2047ms
[debug]           Load.loadUnit: cleanEvalClasses took 2.242ms
[debug]         Load.loadUnit(file:/C:/Users/Ashik/IdeaProjects/Scala-Learning/project/, ...) took 87.3372ms
[debug]       Load.apply: load took 87.9691ms
[debug]       Load.apply: resolveProjects took 0.0528ms
[debug]       Load.apply: finalTransforms took 7.9242ms
[debug]       Load.apply: config.delegates took 0.4456ms
[debug]       Load.apply: Def.make(settings)... took 48.9372ms
[debug]       Load.apply: structureIndex took 16.4989ms
[debug]       Load.apply: mkStreams took 0.002ms
[info] loading project definition from C:\Users\Ashik\IdeaProjects\Scala-Learning\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 347.8378ms
[debug]     Load.loadUnit: defsScala took 0.0017ms
[debug] [Loading] Scanning directory C:\Users\Ashik\IdeaProjects\Scala-Learning
[debug]       Load.loadUnit: mkEval took 0.1344ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.1841 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 28.2518ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Ashik\IdeaProjects\Scala-Learning, plugins: List(<none>))) took 30.4096ms
[debug] [Loading] Done in C:\Users\Ashik\IdeaProjects\Scala-Learning, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 83.5242ms
[debug]     Load.loadUnit: cleanEvalClasses took 3.774ms
[debug]   Load.loadUnit(file:/C:/Users/Ashik/IdeaProjects/Scala-Learning/, ...) took 435.6182ms
[debug] Load.apply: load took 436.6839ms
[debug] Load.apply: resolveProjects took 0.0697ms
[debug] Load.apply: finalTransforms took 14.8372ms
[debug] Load.apply: config.delegates took 0.1802ms
[debug] Load.apply: Def.make(settings)... took 43.7664ms
[debug] Load.apply: structureIndex took 15.3915ms
[debug] Load.apply: mkStreams took 0.0018ms
[info] set current project to Scala-Learning (in build file:/C:/Users/Ashik/IdeaProjects/Scala-Learning/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 52220 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 52220, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Scala-Learning (in build file:/C:/Users/Ashik/IdeaProjects/Scala-Learning/)
[debug] > Exec(idea-shell, None, None)
